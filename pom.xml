<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
    <relativePath/>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>net.akmorrow13.epitome</groupId>
  <artifactId>epitome-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>epitome</name>

  <properties>
    <adam.version>0.23.0-SNAPSHOT</adam.version>
    <spark.version>2.1.0</spark.version>
    <scala.version>2.11.7</scala.version>
    <scala.version.prefix>2.11</scala.version.prefix>
    <bdg-utils.version>0.2.9</bdg-utils.version>
    <avro.version>1.8.1</avro.version>
    <bdg-formats.version>0.11.3</bdg-formats.version>
    <hadoop.version>2.7.3</hadoop.version>
    <hadoop-bam.version>7.8.0</hadoop-bam.version>
    <parquet.version>1.8.2</parquet.version>
  </properties>


  <modules>
    <module>preprocess-scala</module>
    <!--<module>python</module>-->
    <module>assembly</module>
  </modules>

  <licenses>
    <license>
      <name>Apache License</name>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git@akmorrow13/epitome.git</connection>
    <developerConnection>scm:git:git@github.com:akmrorow13/epitome.git</developerConnection>
    <url>scm:git:git@github.com:akmorrow13/epitome.git</url>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>akmorrow13</id>
      <name>Alyssa Morrow</name>
      <email>akmorrow@berkeley.edu</email>
      <organization>U.C. Berkeley, Department of Electrical Engineering and Computer Science</organization>
      <organizationUrl>http://www.cs.berkeley.edu/</organizationUrl>
    </developer>
  </developers>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/akmorrow13/epitome/issues</url>
  </issueManagement>

  <build>
    <outputDirectory>target/scala-${scala.version}/classes</outputDirectory>
    <testOutputDirectory>target/scala-${scala.version}/test-classes</testOutputDirectory>

    <pluginManagement>
      <plugins>
        <!-- enable scalatest -->
        <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <junitxml>.</junitxml>
          <filereports>mangoTestSuite.txt</filereports>
          <argLine>-Xmx1024m -Dsun.io.serialization.extendedDebugInfo=true</argLine>
          <stdout>F</stdout>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
        <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.2</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
          <args>
            <arg>-unchecked</arg>
            <arg>-optimise</arg>
            <arg>-deprecation</arg>
          </args>
          <jvmArgs>
            <jvmArg>-Xms64m</jvmArg>
            <jvmArg>-Xms1024m</jvmArg>
            <jvmArg>-Xmx1024m</jvmArg>
          </jvmArgs>
          <javacArgs>
            <javacArg>-source</javacArg>
            <javacArg>${java.version}</javacArg>
            <javacArg>-target</javacArg>
            <javacArg>${java.version}</javacArg>
          </javacArgs>
        </configuration>
      </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <skipTests>true</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>appassembler-maven-plugin</artifactId>
          <version>1.10</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.scalariform</groupId>
        <artifactId>scalariform-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
    	<groupId>org.tensorflow</groupId>
    	<artifactId>spark-tensorflow-connector</artifactId>
    	<version>1.0-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.adam</groupId>
        <artifactId>adam-assembly_${scala.version.prefix}</artifactId>
        <version>0.23.0-SNAPSHOT</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.version.prefix}</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.version.prefix}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.utils</groupId>
        <artifactId>utils-misc_${scala.version.prefix}</artifactId>
        <version>${bdg-utils.version}</version>
        <scope>test</scope>
        <type>test-jar</type>
        <exclusions>
          <exclusion>
            <groupId>org.apache.spark</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.version.prefix}</artifactId>
        <version>${spark.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.scalanlp</groupId>
            <artifactId>breeze-math_${scala.version.prefix}</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.scalanlp</groupId>
        <artifactId>breeze_${scala.version.prefix}</artifactId>
        <version>0.13.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.version.prefix}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.version.prefix}</artifactId>
        <version>2.2.6</version>
      </dependency>
      <dependency>
        <groupId>net.akmorrow13.epitome</groupId>
        <artifactId>preprocess-scala</artifactId>
      </dependency>
      <dependency>
        <groupId>net.akmorrow13.epitome</groupId>
        <artifactId>preprocess-scala</artifactId>
        <version>${project.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
    <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.netty</groupId>
            <artifactId>netty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>*</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.sonatype.sisu.inject</groupId>
            <artifactId>*</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.bdg-formats</groupId>
        <artifactId>bdg-formats</artifactId>
        <version>${bdg-formats.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
	<groupId>org.seqdoop</groupId>
        <artifactId>hadoop-bam</artifactId>
        <version>${hadoop-bam.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.seqdoop</groupId>
            <artifactId>htsjdk</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.parquet</groupId>
        <artifactId>parquet-avro</artifactId>
        <!--
                         IMPORTANT NOTE
            ==============
            Spark 2.2.0 bumps to Parquet 1.8.2, but keeps Avro at 1.7.3. This
            causes an issue when using parquet-avro 1.8.2, which relies on a
            method that is new in Avro 1.8.x. The recommended workaround is to
            pin parquet-avro to 1.8.1, instead of 1.8.2, as described in the
            Spark 2.2.0 release notes.
        -->
        <version>1.8.1</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.parquet</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.parquet</groupId>
        <artifactId>parquet-scala_2.10</artifactId>
        <version>${parquet.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.utils</groupId>
        <artifactId>utils-cli_${scala.version.prefix}</artifactId>
        <version>${bdg-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.adam</groupId>
        <artifactId>adam-core_${scala.version.prefix}</artifactId>
        <version>${adam.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.bdgenomics.utils</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>
